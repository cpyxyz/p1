

 
db.createCollection("department")
db.dept.insertMany([
    {
      _id: "d01", 
      name: "Finance", 
      place: "Bengaluru"
    }, 
    {
      _id: "d02", 
      name: "IT",
      place: "Bengaluru"
    }
  ])


db.createCollection("project")
db.project.insertMany([
    {
      _id:"p01", 
      title: "Application development", 
      deptId: "d02"
    }, 
    {
      _id:"p02", 
      title:"finance audit", 
      deptId: "d03"
    }
  ])


db.createCollection("employee")
db.employee.insertMany([
      {
        ssn: "e01", 
        ename: "mgk",
        gender: "male",
        salary: 20000,
        qualification: "MCA",
        exp: 2,
        designation: "Senior Software Engineer",
        deptId: "d02", 
        projects: [
          {
            projectId: "p1", 
            hours: 20
          }
        ]
      },
      {
        ssn: "e02", 
        ename: "som",
        gender: "male",
        salary: 40000,
        qualification: "MCA",
        exp: 3,
        designation: "Software Engineer",
        deptId: "d02", 
        projects: [
          {
            projectId: "p1", 
            hours: 22
          }
        ]
      },
      {
        ssn: "e03", 
        ename: "anup",
        gender: "male",
        salary: 60000,
        qualification: "MCA",
        exp: 2,
        designation: "Analyst",
        deptId: "d01", 
        projects: [
          {
            projectId: "p2", 
            hours: 20
          }
        ]
      },
      {
        ssn: "e04", 
        ename: "sohan",
        gender: "male",
        salary: 25000,
        qualification: "MCA",
        exp: 5,
        designation: "Senior analyst",
        deptId: "d01", 
        projects: [
          {
            projectId: "p2", 
            hours: 18
          }
        ]
      },
      {
        ssn: "e05", 
        ename: "mahesh",
        gender: "male",
        salary: 28000,
        qualification: "MCA",
        exp: 3,
        designation: "Software Engineer",
        deptId: "d02", 
        projects: [
          {
            projectId: "p1", 
            hours: 28
          }
        ]
      }
    ])

2) Sort according to the ssn
db.employee.find().sort({"ssn":1})

3) List the employees who are working in finance department
db.employee.find({deptId:db.dept.aggregate([{$match:{name:"Finance"}},{$project:{_id:1}}]).toArray()[0]._id})

4) Find the employee who draws maximum salary
db.employee.find({salary:db.employee.aggregate([{$group:{_id:null,maxsal:{$max:'$salary'}}}]).toArray()[0].maxsal})

5) Update the record of the employee who has worked on maximum projects as "employee of the year"
db.employee.update(
    {_id:db.employee.aggregate(
      [{$project:{count:{$size:'$projects'}}},{$sort:{'count':-1}}]).toArray()[0]._id},{$set:{"award":"Employee of the year"}
    }
  )

6) Delete employee records who has minimum experience
db.employee.deleteOne({exp:db.employee.aggregate([{$group:{_id:null,minExp:{$min:'$exp'}}}]).toArray()[0].minExp})

Extra
1) Retrieve the details of MALE employees whose designation is senior software engineer
db.employee.find({$and: [{gender: "male"},{designation: "Senior SE"}]}).pretty()

2) Retrieve the details of employees who have specified their qualification and qualification is 'MCA'
db.employee.find({qualification: "MCA"})

3) Retrieve total number of employees in each department
db.employee.aggregate([{"$group" : {_id:"$deptId", count:{$sum:1}}}])

4) Retrieve the details of female employees whose salary is greater than average salary of all 
the employees working in finance department
db.employee.find({$and: [{gender: "female"}, {salary: {$gt: db.employee.aggregate([{"$match": {deptId: "dept1"}}, {"$group" : {_id:"$deptId", avg:{$avg:"$salary"}}}]).toArray()[0].avg}}]})

5) List the details of employees working on all the projects controlled by specific department

6) Retrieve the details of employee who have worked for maximum hours on each project
